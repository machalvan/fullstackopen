{"version":3,"sources":["services/personService.js","App.js","index.js"],"names":["personService","axios","get","then","res","data","person","post","id","delete","Input","label","props","PersonForm","handleSubmit","input1","input2","onSubmit","type","Person","deletePerson","key","name","number","onClick","Notification","message","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","success","setSuccess","error","setError","value","onChange","event","target","addPerson","find","p","showNotification","newPerson","concat","window","confirm","filter","setTimeout","useEffect","initialPersons","preventDefault","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ee9d35f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => axios\n  .get(baseUrl)\n  .then(res => res.data)\n\nconst create = person => axios\n  .post(baseUrl, person)\n  .then(res => res.data)\n\nconst remove = id => axios\n  .delete(`${baseUrl}/${id}`)\n\nexport const personService = { getAll, create, remove }","import React, {useEffect, useState} from 'react'\nimport {personService} from \"./services/personService\";\n\nconst Input = ({label, ...props}) => (\n  <div>\n    {label} <input {...props} />\n  </div>\n)\n\nconst PersonForm = ({handleSubmit, input1, input2}) => (\n  <form onSubmit={handleSubmit}>\n    <Input {...input1} />\n    <Input {...input2} />\n    <button type=\"submit\">add</button>\n  </form>\n)\n\nconst Person = ({person, deletePerson}) => (\n  <div key={person.name}>\n    {person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button>\n  </div>\n)\n\nconst Notification = ({message, type}) => <div className={`button ${type}`}>{message}</div>\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [success, setSuccess] = useState('')\n  const [error, setError] = useState('')\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNumberChange = (event) => setNewNumber(event.target.value)\n  const input1 = { label: \"name: \", value: newName, onChange: handleNameChange}\n  const input2 = { label: \"number: \", value: newNumber, onChange: handleNumberChange}\n  const getPerson = (name) => persons.find(p => p.name === name)\n\n  const resetFields = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const addPerson = () => {\n    if (!getPerson(newName)) {\n      personService\n        .create({name: newName, number: newNumber})\n        .then(newPerson => {\n          setPersons(persons.concat(newPerson));\n          resetFields()\n          showNotification(`Added ${newName}`, \"success\")\n        })\n    } else {\n      setError(`${newName} is already added to phonebook`)\n      showNotification(`${newName} is already added to phonebook`, \"error\")\n    }\n  }\n\n  const deletePerson = ({id, name}) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          showNotification(`Successfully deleted ${name}`, \"success\")\n        })\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    addPerson()\n  }\n\n  const showNotification = (message, type) => {\n    const timeout = 5000\n\n    if (type === \"success\") {\n      setSuccess(message)\n      setTimeout(() => setSuccess(null), timeout);\n    } else {\n      setError(message)\n      setTimeout(() => setError(null), timeout);\n    }\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {success && <Notification message={success} type=\"success\" />}\n      {error && <Notification message={error} type=\"error\" />}\n      <PersonForm {...{handleSubmit, input1, input2}} />\n      <h2>Numbers</h2>\n      {persons.map(person => (\n        <Person key={person.name} {...{person, deletePerson}} />\n      ))}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}